При покупке одних и тех же товаров с тем же размером, позиции добавляются, а не стакаются в одну.
![](https://u.netology.ru/backend/uploads/markdown_images/image/130891/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

После успешного заказа невозможно заказать что-либо ещё, потому что висит сообщение об успешном размещении заказа. При это продолжить покупки просто переносит покупателя на главную. Лечится только перезагрузкой страницы.
![](https://u.netology.ru/backend/uploads/markdown_images/image/130899/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Нет валидации полей формы отправки заказа. 
Нет проверки на существование позиций в заказе. 
Галочка соглашения для красоты, форма отправится в любом случае.
При этом, даже если все поля пусты на сервер что-то улетает.
![](https://u.netology.ru/backend/uploads/markdown_images/image/130903/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Ошибки в консоли
![](https://u.netology.ru/backend/uploads/markdown_images/image/130901/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Что происходит с форматированием в файлах?
![](https://u.netology.ru/backend/uploads/markdown_images/image/130904/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Зачем такие пробелы? 
https://github.com/Magerk3/ra16-diploma/blob/872606b334f158bfd38f72e79885886841f1014c/src/features/cart/Cart.js#L9-L11

Функции и маперы лучше описывать в теле функции, а не в JSX, а ещё лучше кешировать функцию или её вывод (useMemo, useCallback), если не пользуетесь React.memo.
https://github.com/Magerk3/ra16-diploma/blob/872606b334f158bfd38f72e79885886841f1014c/src/features/cart/CartTable.js#L36-L54
Также это упрощает читаемость кода.
Но здесь ситауция просит декомпозиции. Вынесите создание содержимого tbody в отдельный компонент, который получает на вход только массив с данными. Соответственно этот компонент потом и вставляйте в CartTable.

Вот эту часть в useCallback и все зависимости в deps, если не используете memo.
https://github.com/Magerk3/ra16-diploma/blob/872606b334f158bfd38f72e79885886841f1014c/src/features/cart/CartTable.js#L14-L20

Также стоит немного поработать над общей композицией компонентов. 
Объясню на примере компонента Cart.
В вашем коде он выступает как контейнер для заголовка, формы позиций и формы для заказа.
Он имеет внутри своё состояние получаемое из стора, при этом каждый из его потомков тоже получает своё состояние из стора. 

т.е. получается вооот такая картинка
![](https://u.netology.ru/backend/uploads/markdown_images/image/130907/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

(да это paint xp) Да и чёрт бы с ним, как будто бы. Работает же. 
Да, это так, но до момента, пока мы не захотим уехать с этого стора или изменить стор вообще. Перейти на rxjs и nrgx например. У тут нам приходится переделывать все компоненты потому что мы напрямую связаны со стором в каждом из них.
А как лучше? А вот так
![](https://u.netology.ru/backend/uploads/markdown_images/image/130909/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Где есть компоненты с состоянием и без. Компоненты с состоянием получают инфу от стора, назначают обработчики и делатся всей инфой в них с дочерними элементами в них через пропсы.
Например:
cartItem можно прокидывать в компонент tbody который будет отрисовывать внутреннее содержимое таблицы. При этом, этот компонент может передаваться в CartTable не прямо в код jsx разметки, а через children. После всех доработок получается такая картинка:

![](https://u.netology.ru/backend/uploads/markdown_images/image/130915/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)
![](https://u.netology.ru/backend/uploads/markdown_images/image/130918/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)
![](https://u.netology.ru/backend/uploads/markdown_images/image/130917/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

И всё. Теперь связность уменьшена и нам не будет больно перестраивать наш сервис. И более того, теперь компоненты стали - компонентами. Туже таблицу можно запихнуть в другой проект и дать ему на вход валитный список, и ему вообще будет без разницы, он отрисует и это. 
Я писал код без запуска. Помните это. 

Ещё пара моментов касательно того, как называются директории и как раскиданы файлы в архитектуре. 

Это не features это компоненты в прямом их виде и значении.
![](https://u.netology.ru/backend/uploads/markdown_images/image/130919/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

А это не компоненты, это pages
![](https://u.netology.ru/backend/uploads/markdown_images/image/130920/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Ни единый компонент или страница не имеет расширешия JSX, что странно, учитывая, что он его использует.

Слайлер с компонентом лучше не ложить.
![](https://u.netology.ru/backend/uploads/markdown_images/image/130921/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png)

Создайте отдельную директорию store или закиньте в app папку слайсеры и всё что относится к store.
Оттуда и тяните. 

Не нравятся обратные относительные пути? Настройте алиасы путей, но это не обязательно. 

Вообще работа крутая, но есть над чем поработать. Также, если вдруг не очень хочется расставаться с такой композицией, как сейчас посмотрите в сторону redux connect

Если что, вы знаете, где меня искать.

p.s. устраните все ворниги на запуске сервера, они не дадут вам задеплоить проект через CI/CD если вдруг захотите выложить его и показать работодателю например. 
