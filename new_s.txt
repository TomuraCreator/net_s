Имя, здравствуйте!

Благодарю за выполненную работу!

### Задача 1 ###

* `z-index` не требуется для `.product-badge`. Каждый новый слой над статическим потоком встаёт выше предыдущего. В этом репле я показал, что имею в виду https://repl.it/@TomuraCreator/VioletWellwornMinimalsystem#style.css
Свойство z-index управляет положением слоев по оси z. Но в конкретной задаче, это не требуется т.к. бейдж автоматически выше. 

* Правило для `.product-img` не требуется.
* Вам нужно установить `.product-badge` относительно элемента карточки `.product` таким образом чтобы его позиция рассчитывалась от границ карточки.
* Свойство `content` может создать псевдоэлемент только в связке с `::before` или `::after`. В данном случае здесь это не нужно.
* Прошу придерживаться стиля кода. https://github.com/netology-code/codestyle 
* Если применить 2 одинаковых свойства с разными значениями в одном правиле, то применится то, что описано ниже в коде. То что выше просто игнорируется браузером.
* Свойства `z-index, top, left, right, bottom` не применяются к элементам position которых равно `static`


### Задача 2 ###

* У `.welcome` отсутствует подложка.
* Маска сейчас покрывает всю страницу, а должна только `.welcome`.
* Фоновое изображение не растягивается на всю ширину контейнера. 
* Удобнее будет установить `position: relative` для всего элемента `.container`, после чего изменить регистр только для заголовка.
* `.container` растянут на всю ширину `.welcome` потому что это блочный элемент. Свойства top, left, right, bottom лишние.
* Слой маски находится выше, чем слой контейнера из-за чего буквы серые. Если бы под маской находилась ссылка или кнопка, пользователь не смог бы на неё нажать. Вам нужно поменять местами слои маски и контейнера!
* Заголовок отличается от требуемого в условии, ещё раз внимательно пересмотрите условие. 
* Здесь достаточно много свойств z-index, вам стоит пересмотреть вашу работу и убрать лишние свойства z-index. Чем их больше, тем больше вероятность запутаться в слоях) Подскажу. Должно остаться лишь одно свойство при ваших текущих стилях, но можно кое-что изменить и z-index не понадобится вовсе.
* Для .container можно применить относительное позиционирование, тогда вам не придётся бороться со схлопыванием блока. Абсолютное позиционирование вырывает элемент из нормального потока, относительное выделяет его на дополнительный слой, но место на странице он всё ещё занимает. И к тому же границы блока схлопнуться если они не указаны.
* Для .welcome не нужны свойства top, left, right, bottom
* Маска это в данном случае полупрозчная плёнка.
* Вы путаете подложку и маску)  Подложка это основной цвет фонового изображения помещённый в background-color для того, если картинка по какой-то причине не загрузится, пользователь не лишится глаз, ведь фон бокса будет не белым, а тёмным.

### Задача 3 ### 

* Для `.header` требуется установить вертикальные отступы.
* Ширину для `.header` не нужно прописывать, по условию от вас этого не требуется. Этот блок должен растягиваться по ширине страницы.
* Размер контейнера не равен размеру всей ширины макета. Измерить нужно вот этот отрезок https://i.imgur.com/8Bg4Fb3.png красным показан весь блок `.container`
* Для .container не указана ширина.
* Автомарджины у контейнера не нужны. Здесь преподавателем уже прописаны эти свойства. В этой задаче от вас требуется лишь установить размеры из макета.
* Высота для логотипа не требуется по условию. Устанавливая высоту, вы искажаете пропорции изображения.
* Боковые отступы должны быть равны промежутку между двумя крайними направляющими макета 
https://i.imgur.com/62ZqbFs.png
* Отступы для `.container` должны быть внутренними. Обратите внимание, что контейнер теперь прибит к левому краю страницы. Своими свойствами margin вы переопределили это же свойства, что рассчитывались автоматически и держали блок по центру. 
* Ширина всего контейнера равна 1200 px этот замер включает также и паддинги. В вашем случае ширина вместе с отступами 1230px, что явно больше. Вы можете либо уменьшить на 30px ширину контейнера, либо добавить свойство переопределяющее расчёт ширины устанавливаемое свойством width. 
* Для контейнера не нужна высота. Она подстраивается под самое “высокое” содержимое внутри него. В данном случае это логотип.

* Для логотипа не требуются отступы. Этот элемент зажат границами его родителя и позиционируется на странице положением родителя. Он словно лежит в коробке. Перемещая коробку, перемещаете и его.
* Для расчёта отступов ссылок используйте более универсальную формулу, или другой псевдокласс.
* Для `.menu` не указана ширина. Именно поэтому при текущем значении отступов ссылка не перескакивает на нижнюю линию.
* Все элементы по умолчанию стремятся в верхний левый угол. Назначая нижний отступ вы толкаете элементы друг от друга. В случае с контейнером меню, толкать вниз нечего. Свойство лишнее.
* Высота отступа для блока меню должна быть меньше. Присмотритесь он явно очень низко.
* У каждой ссылки должны быть отступы. Кроме крайних ссылок. Иначе ссылки не уместятся в контейнер меню.
* Для ссылок лучше использовать внешние отступы во избежание проблем с оформлением в дальнейшем. 
* https://image.prntscr.com/image/8ke2I3WMQi6cwrwxgNDZVA.png присмотритесь справа есть пустое место, вот такого быть не должно. Это в какой-то момент может бросаться в глаза наравне с другими элементами страницы.
* `menu-list-item:nth-child(n)` значит буквально - каждый. А знаете что ещё имеет такое же значение? Просто класс) `.menu-list-item` Вы сами себе делаете код неочевидным, потом как через недельки 2-3 вернетесь к этой задаче, будьте уверены, вы задержитесь на этой строчке с псевдоселектором, который и не нужен вовсе, но зачем-то написан) . 



Нужно немного доработать! Если возникнут вопросы пишите в слак @Vladislav Utkin



Хорошая работа! Поздравляю с зачетом!)
Успехов в дальнейшем обучении!






